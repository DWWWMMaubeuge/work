RESUMÉ 
Création d'un projet sur symfony

Installer composer et symfony
une fois l'installation terminé...
  
Cliquez sur n'importe quel dossier ou vous voulez insérer votre projet...

Clique droit au document et puis cliquez sur Git bash here
Insérez la ligne de commande suivante dans le terminal....
                                       $ composer create-project symfony/website-skeleton leNomDeMonProjet "4.4.*"
à la suite...
après quelques secondes de téléchargement...
Rentrer dans le projet en restant sur la même fenêtre en insérant la commande
                                        $ cd leNomDeMonProjet
Pour démarrer le serveur, à la suite insérer la commande:
	                                $php -S localhost:8000 -t public
                                            OR 
	                                $composer require symfony/web-server-bundle --dev ^4.4.2
                                        
Normalement maintenant, ça marche. 
Ouvrez donc votre navigateur et naviguer sur l’adresse http://localhost:8000.

Maintenant,configurer le fichier .env pour la connexion à la BDD

DATABASE_URL="mysql://root@localhost:3306/nomdevotrebasededonnée"

Modifié donc cette ligne, afin qu'elle s'adapte bien à votre base de donnée.
Maintenant...
Pour créer une base de donnée en ligne de commande: $php bin/console doctrine:database:create

Maintenant il faut créer des routes :

- créer des routes dans le fichier config/routes.yaml
  (attention le yaml est sensible à l'indentation)
  ex :
    pageAccueil:
        path: /accueil
        controller: App\Controller\NomController::index

Après cela, créer un controller en tapant la commande : 
                                        $ php bin/console make:controller LeNomdeMonController
                                        <<le controlleur gère la reponse à une route>> 
Un petit carré vert inscrit Success ! Apparaît...
                                  là, 2 fichiers ont été créés, LeNomDeMonController.php dans src/Controller et index.html.twig dans templates/leNomDeMonProjet




- créer des méthodes qui se chargeront du traitement de la route. 
  Dans le repertoire src/controller/TotoController.php
  Le plus smple étant de partir d'un copier coller de la méthode index présente par défault dans le controller


RESUMÉ possibilités TWIG

    Vos pages TWIG peuvent être dérivées d'une page de base

    {# ce text est un commentaire #}

    faire apparaitre la variable {{ var }} 

    {%  qquChose  %}  ce bloc permet de gérer les emboitements de nos pages
        - include
        - substitution de bloc
        - héritage de page